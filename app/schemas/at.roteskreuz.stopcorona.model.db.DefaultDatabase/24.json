{
  "formatVersion": 1,
  "database": {
    "version": 24,
    "identityHash": "e4de45d8b9a47599b93c15e5a644ca20",
    "entities": [
      {
        "tableName": "configuration",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `warnBeforeSymptoms` INTEGER, `redWarningQuarantine` INTEGER, `yellowWarningQuarantine` INTEGER, `selfDiagnosedQuarantine` INTEGER, `uploadKeysDays` INTEGER, `cacheTime` INTEGER NOT NULL, `minimumRiskScore` INTEGER NOT NULL, `dailyRiskThreshold` INTEGER NOT NULL, `attenuationDurationThresholds` TEXT NOT NULL, `attenuationLevelValues` TEXT NOT NULL, `daysSinceLastExposureLevelValues` TEXT NOT NULL, `durationLevelValues` TEXT NOT NULL, `transmissionRiskLevelValues` TEXT NOT NULL, `scheduledProcessingIn5Min` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "warnBeforeSymptoms",
            "columnName": "warnBeforeSymptoms",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "redWarningQuarantine",
            "columnName": "redWarningQuarantine",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "yellowWarningQuarantine",
            "columnName": "yellowWarningQuarantine",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "selfDiagnosedQuarantine",
            "columnName": "selfDiagnosedQuarantine",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "uploadKeysDays",
            "columnName": "uploadKeysDays",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cacheTime",
            "columnName": "cacheTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "minimumRiskScore",
            "columnName": "minimumRiskScore",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dailyRiskThreshold",
            "columnName": "dailyRiskThreshold",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attenuationDurationThresholds",
            "columnName": "attenuationDurationThresholds",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "attenuationLevelValues",
            "columnName": "attenuationLevelValues",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "daysSinceLastExposureLevelValues",
            "columnName": "daysSinceLastExposureLevelValues",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "durationLevelValues",
            "columnName": "durationLevelValues",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "transmissionRiskLevelValues",
            "columnName": "transmissionRiskLevelValues",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "scheduledProcessingIn5Min",
            "columnName": "scheduledProcessingIn5Min",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "configuration_questionnaire",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `configurationId` INTEGER NOT NULL, `language` INTEGER NOT NULL, `title` TEXT, `questionText` TEXT, FOREIGN KEY(`configurationId`) REFERENCES `configuration`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "configurationId",
            "columnName": "configurationId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "language",
            "columnName": "language",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "questionText",
            "columnName": "questionText",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_configuration_questionnaire_configurationId",
            "unique": false,
            "columnNames": [
              "configurationId"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_configuration_questionnaire_configurationId` ON `${TABLE_NAME}` (`configurationId`)"
          },
          {
            "name": "index_configuration_questionnaire_language",
            "unique": false,
            "columnNames": [
              "language"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_configuration_questionnaire_language` ON `${TABLE_NAME}` (`language`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "configuration",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "configurationId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "session",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `currentToken` TEXT NOT NULL, `warningType` TEXT NOT NULL, `processingPhase` TEXT NOT NULL, `firstYellowDay` INTEGER, `created` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "currentToken",
            "columnName": "currentToken",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "warningType",
            "columnName": "warningType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "processingPhase",
            "columnName": "processingPhase",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "firstYellowDay",
            "columnName": "firstYellowDay",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "created",
            "columnName": "created",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_session_currentToken",
            "unique": true,
            "columnNames": [
              "currentToken"
            ],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_session_currentToken` ON `${TABLE_NAME}` (`currentToken`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "full_batch",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `sessionId` INTEGER NOT NULL, `batchNumber` INTEGER NOT NULL, `intervalStart` INTEGER NOT NULL, `fileName` TEXT NOT NULL, FOREIGN KEY(`sessionId`) REFERENCES `session`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sessionId",
            "columnName": "sessionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "batchNumber",
            "columnName": "batchNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "intervalStart",
            "columnName": "intervalStart",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fileName",
            "columnName": "fileName",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_full_batch_sessionId",
            "unique": false,
            "columnNames": [
              "sessionId"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_full_batch_sessionId` ON `${TABLE_NAME}` (`sessionId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "session",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "sessionId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "daily_batch",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `sessionId` INTEGER NOT NULL, `batchNumber` INTEGER NOT NULL, `intervalStart` INTEGER NOT NULL, `fileName` TEXT NOT NULL, `processed` INTEGER NOT NULL, FOREIGN KEY(`sessionId`) REFERENCES `session`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sessionId",
            "columnName": "sessionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "batchNumber",
            "columnName": "batchNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "intervalStart",
            "columnName": "intervalStart",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fileName",
            "columnName": "fileName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "processed",
            "columnName": "processed",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_daily_batch_sessionId",
            "unique": false,
            "columnNames": [
              "sessionId"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_daily_batch_sessionId` ON `${TABLE_NAME}` (`sessionId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "session",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "sessionId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "configuration_questionnaire_answer",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`answerId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `questionnaireId` INTEGER NOT NULL, `text` TEXT, `decision` TEXT, FOREIGN KEY(`questionnaireId`) REFERENCES `configuration_questionnaire`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "answerId",
            "columnName": "answerId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "questionnaireId",
            "columnName": "questionnaireId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "text",
            "columnName": "text",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "decision",
            "columnName": "decision",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "answerId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_configuration_questionnaire_answer_questionnaireId",
            "unique": false,
            "columnNames": [
              "questionnaireId"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_configuration_questionnaire_answer_questionnaireId` ON `${TABLE_NAME}` (`questionnaireId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "configuration_questionnaire",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "questionnaireId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "page_content",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `configurationId` INTEGER NOT NULL, `language` INTEGER NOT NULL, `allClear_boldText` TEXT, `allClear_longText` TEXT, `allClear_roofLine` TEXT, `allClear_title` TEXT, `hint_boldText` TEXT, `hint_longText` TEXT, `hint_roofLine` TEXT, `hint_title` TEXT, `selfMonitoring_boldText` TEXT, `selfMonitoring_longText` TEXT, `selfMonitoring_roofLine` TEXT, `selfMonitoring_title` TEXT, `suspicion_boldText` TEXT, `suspicion_longText` TEXT, `suspicion_roofLine` TEXT, `suspicion_title` TEXT, FOREIGN KEY(`configurationId`) REFERENCES `configuration`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "configurationId",
            "columnName": "configurationId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "language",
            "columnName": "language",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "allClear.boldText",
            "columnName": "allClear_boldText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "allClear.longText",
            "columnName": "allClear_longText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "allClear.roofLine",
            "columnName": "allClear_roofLine",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "allClear.title",
            "columnName": "allClear_title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hint.boldText",
            "columnName": "hint_boldText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hint.longText",
            "columnName": "hint_longText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hint.roofLine",
            "columnName": "hint_roofLine",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hint.title",
            "columnName": "hint_title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "selfMonitoring.boldText",
            "columnName": "selfMonitoring_boldText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "selfMonitoring.longText",
            "columnName": "selfMonitoring_longText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "selfMonitoring.roofLine",
            "columnName": "selfMonitoring_roofLine",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "selfMonitoring.title",
            "columnName": "selfMonitoring_title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "suspicion.boldText",
            "columnName": "suspicion_boldText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "suspicion.longText",
            "columnName": "suspicion_longText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "suspicion.roofLine",
            "columnName": "suspicion_roofLine",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "suspicion.title",
            "columnName": "suspicion_title",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_page_content_configurationId",
            "unique": false,
            "columnNames": [
              "configurationId"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_page_content_configurationId` ON `${TABLE_NAME}` (`configurationId`)"
          },
          {
            "name": "index_page_content_language",
            "unique": false,
            "columnNames": [
              "language"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_page_content_language` ON `${TABLE_NAME}` (`language`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "configuration",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "configurationId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "sent_temporary_exposure_keys",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`rollingStartIntervalNumber` INTEGER NOT NULL, `_rollingPeriod` INTEGER NOT NULL, `password` TEXT NOT NULL, `messageType` TEXT NOT NULL, PRIMARY KEY(`rollingStartIntervalNumber`, `_rollingPeriod`))",
        "fields": [
          {
            "fieldPath": "rollingStartIntervalNumber",
            "columnName": "rollingStartIntervalNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "_rollingPeriod",
            "columnName": "_rollingPeriod",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "password",
            "columnName": "password",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "messageType",
            "columnName": "messageType",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "rollingStartIntervalNumber",
            "_rollingPeriod"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "scheduled_sessions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`token` TEXT NOT NULL, PRIMARY KEY(`token`))",
        "fields": [
          {
            "fieldPath": "token",
            "columnName": "token",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "token"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "diary_person",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `fullName` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fullName",
            "columnName": "fullName",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "diary_location",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `locationName` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "locationName",
            "columnName": "locationName",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'e4de45d8b9a47599b93c15e5a644ca20')"
    ]
  }
}